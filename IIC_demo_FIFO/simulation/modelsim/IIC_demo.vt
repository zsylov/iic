// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench template that is freely editable to  
// suit user's needs .Comments are provided in each section to help the user    
// fill out necessary details.                                                  
// *****************************************************************************
// Generated on "07/11/2018 14:40:25"
                                                                                
// Verilog Test Bench template for design : IIC_demo
// 
// Simulation tool : ModelSim-Altera (Verilog)
// 

`timescale 1 ps/ 1 ps
module IIC_demo_vlg_tst();
// constants                                           
// general purpose registers

// test vector input registers
reg clk;
reg rst_n;
// wires                                               
wire [7:0]  DIG;
wire SCL;
wire SDA;
wire [5:0]  SEL;

// assign statements (if any)                          
IIC_demo i1 (
// port map - connection between master ports and signals/registers   
	.DIG(DIG),
	.SCL(SCL),
	.SDA(SDA),
	.SEL(SEL),
	.clk(clk),
	.rst_n(rst_n)
);
initial                                                
begin                                                  
  rst_n <= 0;
#1000;
rst_n <= 1;
clk = 0;
forever #10 clk = ~clk;
end                                                    
                                   
endmodule

